<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP39/BESZ
        ux5Gl7gvRpe4L0SZux4/f38EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHmrcrWavIg3PC
        2sl+zOP4idbr/4/c8P+P3PD/idbr/37M4/hzwtrJWavIg0eatysAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABImro4a7vTvIrX
        7P6i7f7/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+i7f7/itfs/mu71LxImro4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzmbIKXq/Kl4zZ
        7f2j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//4zZ
        7f1er8qXM5myCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQpe8G228
        1dCe6vv/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//57q+/9tvNXQP5q2HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKX
        vBtzw9vdou3+/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Lt/v9ywtreP5q2HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzmbIKbb3Wz6Lt/v+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Lt/v9tvNXQM5myCgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF6vypee6vv/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//57q+/9er8qXAAAAAAAA
        AAAAAAAAAAAAAAAAAABImro4jNnt/aPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+Ry9b/kcvW/5HL1v+Ry9b/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//4zZ
        7f1Imro4AAAAAAAAAAAAAAAAAAAAAGu81Luj7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//2h3dv9NQDb/TUA2/2h3dv+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//2u71LwAAAAAAAAAAAAAAABHmrcritfs/qPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//kcvX/01ANv9NQDb/kcvW/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//itfs/keatysAAAAAAAAAAFmrxoOi7f7/o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+Ry9f/TUA2/01ANv+Ry9b/o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+i7f7/WavIgwAAAAAAAAAAcsLayaPu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//5HL1/9NQDb/TUA2/5HL1v+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//9zwtrJAAAAAD9/fwR+zOP4o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//kcvX/01ANv9NQDb/kcvW/6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//37M4/g/f38ERJm7HonW
        6/+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+Ry9f/TUA2/01A
        Nv+Ry9b/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//idbr/0SZ
        ux5Gl7gvj9zw/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//5HL
        1/9NQDb/TUA2/5HL1v+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+P3PD/Rpe4L0aXuC+P3PD/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//kcvX/01ANv9NQDb/kcvW/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//4/c8P9Gl7gvRJm7HonW6/+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+Ry9f/TUA2/01ANv+Ry9b/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//idbr/0SZux4/f38Efszj+KPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//4Svtv9NQDb/TUA2/5HL1v+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//9+zOP4P39/BAAAAABywtrJo+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//b4WG/2+Fhv9vhYb/mNnm/6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//3PC2skAAAAAAAAAAFmrxoOi7f7/o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+i7f7/WavIgwAAAAAAAAAASJ28KorX
        7P6j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Hq+/9sf37/bH9+/6Hq
        +/+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//4rX7P5HmrcrAAAAAAAA
        AAAAAAAAa7rUu6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//ldPf/01A
        Nv9NQDb/ldLf/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//a7vTvAAA
        AAAAAAAAAAAAAAAAAABEmro4jNnt/aPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+i7f7/faKn/32ip/+i7f7/o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//4zZ
        7f1Imro4AAAAAAAAAAAAAAAAAAAAAAAAAABcr8qXnur7/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+e6vv/Xq/KlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOZsgptvdbPou3+/6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//ou3+/2281dAzmbIKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKXvBtzw9vdou3+/6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Lt/v9zw9vdQpe8GwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKX
        vBttvdbPnur7/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+e6vv/bb3Wz0KXvBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADOZsgpcr8qXjNnt/aPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//jNnt/V6vypczmbIKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEmro4a7rUu4rX7P6i7f7/o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+i7f7/itfs/mu81LtImro4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASJ28KlmrxoNyw9vIfszj+InW
        6/+P3PD/j9zw/4nW6/9+zOP4csLayVmrxoNHmrcrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA/f38ERJm7HkaXuC9Gl7gvRJm7Hj9/fwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///AA///AAD//AAAP/gAAB/wAAAP4AAAB+AAAAfAAAADwAAAA4AA
        AAGAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB+AA
        AAfwAAAP+AAAH/wAAD//AAD//8AD///4H/8=
</value>
  </data>
</root>